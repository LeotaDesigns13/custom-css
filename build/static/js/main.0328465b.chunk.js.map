{"version":3,"sources":["components/table.jsx","components/textfields.jsx","components/banner.jsx","components/bottomtoolbar.jsx","components/snackbars.jsx","components/MenuList.jsx","components/bannerimage.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","rows","SimpleTable","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","name","scope","theme","root","margin","spacing","width","FormPropsTextFields","noValidate","autoComplete","TextField","required","id","label","defaultValue","disabled","type","InputLabelProps","shrink","variant","flexGrow","menuButton","marginRight","title","ButtonAppBar","AppBar","position","Toolbar","Typography","appBar","top","bottom","grow","BottomAppBar","Fragment","color","Alert","props","elevation","marginTop","CustomizedSnackbars","React","useState","severity","display","paper","MenuListComposition","open","anchorRef","useRef","prevOpen","useEffect","current","focus","MenuList","MenuItem","DenseAppBar","Box","m","Avatar","src","App","darkMode","setDarkMode","createMuiTheme","palette","ThemeProvider","CssBaseline","Switch","checked","onChange","Container","mt","gutterBottom","IconButton","edge","mb","mr","Button","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0328465b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData() {\n  return { };\n}\n\nconst rows = [\n  createData('', '', '', '', ''),\n  createData('', '', '', '', ''),\n  createData('', '', '', '', ''),\n  createData('', '', '', '', ''),\n  createData('', '', '', '', ''),\n];\n\nexport default function SimpleTable() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell align=\"left\">Title</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\"></TableCell>\n              <TableCell align=\"right\"></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function FormPropsTextFields() {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField required id=\"standard-required\" label=\"Data Value\" defaultValue=\"Field\" />\n        <TextField disabled id=\"standard-disabled\" label=\"Data Value\" defaultValue=\"Field\" />\n      \n        <TextField\n          id=\"standard-number\"\n          label=\"Number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n          <TextField\n          required\n          id=\"filled-required\"\n          label=\"Data Value\"\n          defaultValue=\"Field\"\n          variant=\"filled\"\n        />\n      </div>\n      <div>\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Data Value\"\n          defaultValue=\"Field\"\n          variant=\"outlined\"\n        />\n        <TextField\n          disabled\n          id=\"outlined-disabled\"\n          label=\"Disabled\"\n          defaultValue=\"Hello World\"\n          variant=\"outlined\"\n        />\n\n       \n      </div>\n    </form>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { TextareaAutosize } from '@material-ui/core';\nimport Selector from \"react-border-wrapper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    \n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root} >\n    <box width=\"Auto\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Banner\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </box>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    \n  },\n  grow: {\n    flexGrow: 0,\n  },\n  \n}));\n\nexport default function BottomAppBar() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          \n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbars() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert>\n    </div>\n  );\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function MenuListComposition() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <MenuList>\n          <MenuItem>Menu Item 1</MenuItem>\n          <MenuItem>Menu Item 2</MenuItem>\n          <MenuItem>Menu Item 3</MenuItem>\n        </MenuList>\n      </Paper>      \n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function DenseAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n            <Box m={1}>\n            <Avatar variant=\"sqaure\"><img src=\"./image.png\"/></Avatar>\n            </Box>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Banner with logo\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Button, Typography, Container, Box, CssBaseline, Switch, IconButton} from '@material-ui/core';\nimport Table from \"./components/table\";\nimport TextField from \"./components/textfields\";\nimport Banner from \"./components/banner\";\nimport BottomToolbar from \"./components/bottomtoolbar\";\nimport Snackbars from \"./components/snackbars\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport './App.css';\nimport Menulist from \"./components/MenuList\";\nimport Imagebanner from \"./components/bannerimage\";\n\n\n\n\n\n\nfunction App() {\n  const [darkMode, setDarkMode] =useState(false);\n  const theme = createMuiTheme ({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    }\n  });\n  return (\n<ThemeProvider theme={theme}>\n  <CssBaseline />\n\n  <Switch checked={darkMode} onChange={() => setDarkMode(!darkMode)}/>\n\n  <Container className=\"container\">\n  \n  \n      <Banner></Banner>\n \n      <Imagebanner></Imagebanner>\n      \n      <Box mt={1}><Typography variant=\"h4\" gutterBottom>\n       <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\"></IconButton>\n        Header\n      </Typography></Box>\n\n      <TextField>\n        \n      </TextField>\n      <Box mt={1} mb={2} mr={3}> <Button color=\"primary\" variant=\"contained\">BUTTON</Button> <Button color=\"secondary\" variant=\"outlined\">BUTTON</Button> </Box>\n      \n      <Menulist></Menulist>\n      \n      <Box mt={3} mb={3}>\n       \n      </Box>\n      <Box> <Snackbars></Snackbars></Box>\n      <Box mt={1} mb={2}> <Table /> </Box>\n      <BottomToolbar></BottomToolbar>\n   </Container>\n   \n   </ThemeProvider>\n  );\n  \n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}